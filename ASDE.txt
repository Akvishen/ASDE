Ans Task-1 
SELECT DEPT_NAME, AVG(MONTHLY_SALARY) AS AVG_MONTHLY_SALARY
FROM EMPLOYEE
JOIN DEPARTMENT ON EMPLOYEE.DEPT_ID = DEPARTMENT.DEPT_ID
GROUP BY DEPT_NAME;
In this query, we assume that the EMPLOYEE table has a foreign key DEPT_ID that references the DEPARTMENT table's primary key. 
By joining the two tables and grouping by the department name, we can calculate the average monthly salary for each department.
 
Ans Task-2 
import pandas as pd
department_df = pd.read_csv('department.csv')
employee_df = pd.read_csv('employee.csv')
merged_df = employee_df.merge(department_df, on='DEPT_ID')
report_df = merged_df.groupby('DEPT_NAME')['MONTHLY_SALARY'].mean().reset_index()
report_df.columns = ['DEPT_NAME', 'AVG_MONTHLY_SALARY']
print(report_df)
In this script, you need to replace 'department.csv' and 'employee.csv' with the actual filenames/path of your department and employee CSV files, respectively.
The script reads the CSV files using pd.read_csv() and then merges the dataframes based on the common DEPT_ID column using merge().
After that, it calculates the average monthly salary for each department using groupby() and mean(). 
Finally, the resulting report dataframe is printed

Ans Task-3 

Script (Bash):
N=$1
if [ $N -lt 10 ]
then
    OUT=$((N*N))
elif [ $N -lt 20 ]
then
    OUT=1
    LIM=$((N - 10))
    for (( i=1; i<=$LIM; i++ ))
    do
        OUT=$((OUT * i))
    done
else
    LIM=$((N - 20))
    OUT=$((LIM * LIM))
    OUT=$((OUT - LIM))
    OUT=$((OUT / 2))
fi
echo $OUT

Script (Python):
def compute(n):
    if n < 10:
        out = n ** 2
    elif n < 20:
        out = 1
        for i in range(1, n-10+1):
            out *= i
    else:
        lim = n - 20
        out = lim * lim
        out = out - lim
        out = out / 2 
    print(out)


n = int(input("Enter an integer: "))
compute(n)
